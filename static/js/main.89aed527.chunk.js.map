{"version":3,"sources":["components/Layout/Layout.js","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Layout","children","className","Section","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","slice","toLocaleUpperCase","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","positiveFeedbackPercentage","percentage","Math","round","countPositiveFeedbackPercentage","prevState","console","warn","ReactDOM","render","document","querySelector"],"mappings":"kQAMeA,G,MAHA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,qBAAKC,UAAU,SAAf,SAAyBD,MCUdE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,SAAV,OACf,sBAAKC,UAAU,UAAf,UACE,6BAAKE,IACJH,M,MCiBWI,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,6BACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,oBAAiBP,UAAU,aAA3B,SACE,wBAAQQ,KAAK,SAASC,QAAS,kBAAMJ,EAAgBE,IAArD,SACGA,EAAOG,MAAM,EAAG,GAAGC,oBAAsBJ,EAAOG,MAAM,MAFlDH,SCgBVK,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,gCACK,+BACW,wCAAU,+BAAOJ,OACjB,2CAAa,+BAAOC,OACpB,uCAAS,+BAAOC,UAEpB,oBAAGf,UAAU,QAAb,oBAA6BgB,KAC7B,oBAAGhB,UAAU,QAAb,gCAAyCiB,EAAzC,WCEDC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,8BACKA,KCGM,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KA0BtBC,EAAqB,WACrB,OAAOZ,EAAOC,EAAUC,GASxBC,EAAQS,IACRC,EAPkC,WAClC,IAAMC,EAAaC,KAAKC,MAAM,IAAMhB,EAAOY,KAC3C,OAAOE,EAAa,EAAKA,EAAa,EAKTG,GAEjC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAnBM,CAAC,OAAQ,UAAW,OAoB1BC,gBAvCK,SAACG,GACd,OAAQA,GACN,IAAK,OACHc,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjC,MAED,IAAK,UACJR,GAAW,SAAAQ,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHP,GAAO,SAAAO,GAAS,OAAIA,EAAY,KAChC,MAEF,QACEC,QAAQC,KAAR,wDAA2BzB,EAA3B,8GA0BA,cAAC,EAAD,CAASN,MAAM,aAAf,SACIc,EAAQ,EACR,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IACnB,cAAC,EAAD,CAAcP,QAAQ,2BCxDrCe,IAASC,OACL,cAACf,EAAD,IAASgB,SAASC,cAAc,Y","file":"static/js/main.89aed527.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) =>\r\n    <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n <div className=\"Section\">\r\n   <h2>{title}</h2>\r\n   {children}\r\n</div>\r\n );\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import './Feedback.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <ul> \r\n            {options.map(option => (\r\n                <li key={option} className=\"buttonList\">\r\n                  <button type=\"button\" onClick={() => onLeaveFeedback(option)}>\r\n                    {option.slice(0, 1).toLocaleUpperCase() + option.slice(1)}\r\n                </button>  \r\n            </li>\r\n     ))}\r\n        </ul>\r\n    );\r\n}\r\n        \r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div>\r\n         <ul>\r\n                    <li>Good: <span>{good}</span></li>\r\n                    <li>Neutral: <span>{neutral}</span></li>\r\n                    <li>Bad: <span>{bad}</span></li>\r\n                </ul>\r\n                <p className=\"total\">Total: {total}</p>\r\n                <p className=\"total\">Positive feedback: {positivePercentage}%</p>\r\n</div>\r\n)\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <div>\r\n        {message}\r\n    </div>\r\n)\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { useState } from 'react';\nimport Layout from './components/Layout/Layout';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const update = (type) => {\n    switch (type) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      \n       case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      \n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      \n      default:\n        console.warn(`Тип поля - ${type} не обрабатывается.`)\n    }\n };\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const countTotalFeedback = () => {\n        return good + neutral + bad;\n    }\n\n  const countPositiveFeedbackPercentage = () => {\n        const percentage = Math.round(100 * good / countTotalFeedback());\n        return percentage > 0 ?  percentage : 0;\n    }\n\n  \n  const total = countTotalFeedback();\n  const positiveFeedbackPercentage = countPositiveFeedbackPercentage();\n\n    return (\n      <Layout>\n        <Section title=\"Please leave feedback\"> \n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={update} />\n        </Section>   \n        <Section title=\"Statistics\">   \n           {total > 0 ?\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedbackPercentage} />\n             : <Notification message=\"No feedback given\" />\n          } \n          </Section>   \n      </Layout>\n    );\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.querySelector('#root'),\n);\n"],"sourceRoot":""}